<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.90.3">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="$[-0.5,-0.5,-0.5]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'participant': u''}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="False" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1366, 768]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="False" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="FANCY_CARDS" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="selection">
      <MouseComponent name="mouse">
        <Param name="name" updates="None" val="mouse" valType="code"/>
        <Param name="timeRelativeTo" updates="constant" val="routine" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="never" valType="str"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
      </MouseComponent>
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="# Sitmuli downloaded from:&amp;#10;# https://www.1001freedownloads.com/free-clipart/guyenne-classic-card-deck&amp;#10;&amp;#10;# A variable to choose whether to use eye tracking or not.&amp;#10;# If it is left to False, mouse position will be used instead.&amp;#10;expInfo[&quot;Eye Tracker&quot;] = False&amp;#10;&amp;#10;# Defining the variable that will be used when controlling for gaze or mouse position.&amp;#10;# Here we give it an initial value from mouse position&amp;#10;dotPosition=mouse.getPos()&amp;#10;&amp;#10;# Here we define a function to convert Tobii's normalized coordinates to pixels&amp;#10;# and change origin to center of screen, like PsychoPy does&amp;#10;def norm2pix(point, win):&amp;#10;    if not np.isnan(point[0]):&amp;#10;        x = point[0] * win.size[0]&amp;#10;        y = point[1] * win.size[1]&amp;#10;        xAdj = x - (win.size[0] / 2)&amp;#10;        yAdj = (y * -1) + (win.size[1] / 2)&amp;#10;        return (xAdj, yAdj)&amp;#10;    else:&amp;#10;        return (np.nan, np.nan)&amp;#10;&amp;#10;# If eye tracker is to be used, we need to prepare a few things&amp;#10;if expInfo['Eye Tracker']:&amp;#10;    # import tobii pro module&amp;#10;    import tobii_research as tr&amp;#10;    # turn off mouse visibility&amp;#10;    mouse.setVisible(0)&amp;#10;    # find eye trackers&amp;#10;    found_eyetrackers = []&amp;#10;    while len(found_eyetrackers) == 0:&amp;#10;        found_eyetrackers = tr.find_all_eyetrackers()&amp;#10;    # select first eye tracker&amp;#10;    my_eyetracker = found_eyetrackers[0]&amp;#10;    # create list in which we append gaze data&amp;#10;    gaze_list = []&amp;#10;    # create callback to get gaze data&amp;#10;    def gaze_data_callback(gaze_data):&amp;#10;        # append timestamp and gazePointLeft at callback&amp;#10;        gaze_list.append([gaze_data['system_time_stamp'],gaze_data['left_gaze_point_on_display_area']]) # left eye only" valType="extendedCode"/>
        <Param name="name" updates="None" val="code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="# If we are using eye tracking&amp;#10;if expInfo['Eye Tracker']:&amp;#10;    # start getting live data from the eye tracker&amp;#10;    my_eyetracker.subscribe_to(tr.EYETRACKER_GAZE_DATA, gaze_data_callback, as_dictionary=True)&amp;#10;# create a list to collect position data when it is within one of the stimuli.&amp;#10;# this will be reset everytime we look outside a stimulus&amp;#10;gazeCount=[]" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# add the selected image to exported data&amp;#10;trials.addData(&quot;Selected Image&quot;, selectedImage)&amp;#10;# stop collecting data from eye tracker&amp;#10;if expInfo['Eye Tracker']:&amp;#10;    my_eyetracker.unsubscribe_from(tr.EYETRACKER_GAZE_DATA, gaze_data_callback)" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="# If we are using eye tracking&amp;#10;if expInfo['Eye Tracker']:&amp;#10;    # if we have some gaze returned from the eye tracker&amp;#10;    if len(gaze_list) &gt; 0:&amp;#10;        # get the last sample sent from eye tracker&amp;#10;        gpos = gaze_list[-1]&amp;#10;        # use our custom function to convert gaze coordinates to pixels and reset origin to center.&amp;#10;        dotPosition=norm2pix(gpos[1], win)&amp;#10;    # if we don't have gaze data&amp;#10;    else:&amp;#10;        # set position to na&amp;#10;        dotPosition = (np.nan, np.nan)&amp;#10;# if we are not using eye tracking&amp;#10;else:&amp;#10;    # get mouse position&amp;#10;    dotPosition = mouse.getPos()&amp;#10;&amp;#10;# if our position variable is not na&amp;#10;if not np.isnan(dotPosition[0]):&amp;#10;    # check if it is within one of the images&amp;#10;    if CARD1.contains(dotPosition):&amp;#10;        gazeCount.append(dotPosition)&amp;#10;        imageName=&quot;image1&quot;&amp;#10;    elif CARD2.contains(dotPosition):&amp;#10;        gazeCount.append(dotPosition)&amp;#10;        imageName=&quot;image2&quot;&amp;#10;    elif CARD3.contains(dotPosition):&amp;#10;        gazeCount.append(dotPosition)&amp;#10;        imageName=&quot;image3&quot;&amp;#10;    # if gaze is out of stimuli, reset collection list&amp;#10;    else:&amp;#10;        gazeCount=[]&amp;#10;else:&amp;#10;    gazeCount=[]&amp;#10;&amp;#10;# if we collect 60 sample or more in the same stimuli&amp;#10;if len(gazeCount)&gt;=60:&amp;#10;    # set result image file name to the selected image&amp;#10;    selectedImage = &quot;media&quot; + os.sep + imageName+'.png'&amp;#10;    # stop selection routine and show result&amp;#10;    continueRoutine=False&amp;#10;&amp;#10;# check for quit (the Esc key)&amp;#10;if event.getKeys(keyList=[&quot;escape&quot;]):&amp;#10;    # if using eye tracking&amp;#10;    if expInfo['Eye Tracker']:&amp;#10;        # stop getting data from eye tracker&amp;#10;        my_eyetracker.unsubscribe_from(tr.EYETRACKER_GAZE_DATA, gaze_data_callback)&amp;#10;    win.close()&amp;#10;    core.quit()" valType="extendedCode"/>
      </CodeComponent>
      <ImageComponent name="CARD1">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="CARD1" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(-400, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="image" updates="constant" val="media/image1.png" valType="str"/>
        <Param name="size" updates="constant" val="(186, 289)" valType="code"/>
      </ImageComponent>
      <ImageComponent name="CARD2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="CARD2" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="image" updates="constant" val="media/image2.png" valType="str"/>
        <Param name="size" updates="constant" val="(186, 289)" valType="code"/>
      </ImageComponent>
      <ImageComponent name="CARD3">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="CARD3" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(400, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="image" updates="constant" val="media/image3.png" valType="str"/>
        <Param name="size" updates="constant" val="(186, 289)" valType="code"/>
      </ImageComponent>
      <PolygonComponent name="polygon">
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="set every frame" val="$dotPosition" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="size" updates="constant" val="(5, 5)" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="name" updates="None" val="polygon" valType="code"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
      </PolygonComponent>
    </Routine>
    <Routine name="result">
      <TextComponent name="text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Your selection:" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 300)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="30" valType="code"/>
      </TextComponent>
      <ImageComponent name="image">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="image" updates="set every repeat" val="$selectedImage" valType="str"/>
        <Param name="size" updates="constant" val="(186, 289)" valType="code"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="selection"/>
    <Routine name="result"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
